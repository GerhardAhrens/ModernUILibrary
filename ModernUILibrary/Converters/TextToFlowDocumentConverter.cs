//-----------------------------------------------------------------------
// <copyright file="TextToFlowDocumentConverter.cs" company="Lifeprojects.de">
//     Class: TextToFlowDocumentConverter
//     Copyright © Lifeprojects.de 2018
// </copyright>
//
// <author>Gerhard Ahrens - Lifeprojects.de</author>
// <email>developer@lifeprojects.de</email>
// <date>31.03.2017</date>
//
// <summary>WPF Converter for FlowDocument with Markdown-Syntax</summary>
//  <auto-generated />
//-----------------------------------------------------------------------

namespace ModernIU.Converters
{
    using System;
    using System.Globalization;
    using System.Windows;
    using System.Windows.Data;

    using ModernIU.Controls;

    public class TextToFlowDocumentConverter : DependencyObject, IValueConverter
    {
        public static readonly DependencyProperty MarkdownProperty = DependencyProperty.Register("Markdown", typeof(Markdown), typeof(TextToFlowDocumentConverter), new PropertyMetadata(null));

        private Lazy<Markdown> mMarkdown = new Lazy<Markdown>(() => new Markdown());

        public Markdown Markdown
        {
            get { return (Markdown)GetValue(MarkdownProperty); }
            set { SetValue(MarkdownProperty, value); }
        }

        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (value == null)
            {
                return null;
            }

            var text = (string)value;

            var engine = Markdown ?? mMarkdown.Value;

            return engine.Transform(text);
        }

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new NotImplementedException();
        }

    }
}
