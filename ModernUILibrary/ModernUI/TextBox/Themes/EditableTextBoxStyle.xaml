<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:MUI="clr-namespace:ModernIU.Controls"
    xmlns:converter="clr-namespace:ModernIU.Converters">

    <converter:BooleanToNotVisibleConverter x:Key="BooleanToNotVisibleConverter" />
    <converter:BooleanToVisibleConverter x:Key="BooleanToVisibleConverter" />

    <Path
        x:Key="DefaultEditIcon"
        x:Shared="False"
        Data="M14.06,9L15,9.94L5.92,19H5V18.08L14.06,9M17.66,3C17.41,3 17.15,3.1 16.96,3.29L15.13,5.12L18.88,8.87L20.71,7.04C21.1,6.65 21.1,6 20.71,5.63L18.37,3.29C18.17,3.09 17.92,3 17.66,3M14.06,6.19L3,17.25V21H6.75L17.81,9.94L14.06,6.19Z"
        Fill="Black" />

    <Style x:Key="EditButton" TargetType="Button">
        <Setter Property="Background" Value="Brown" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Shared="False" TargetType="{x:Type MUI:EditableTextBox}">
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type MUI:EditableTextBox}">
                    <Border HorizontalAlignment="Stretch" VerticalAlignment="Bottom">

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                x:Name="txtBlock"
                                VerticalAlignment="Center"
                                Text="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}}"
                                Visibility="{Binding IsInEditMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}, Converter={StaticResource BooleanToNotVisibleConverter}}" />

                            <MUI:TextBoxAll
                                x:Name="txtBox"
                                Height="25"
                                VerticalContentAlignment="Center"
                                Text="{Binding Path=Text, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}}"
                                Visibility="{Binding Path=IsInEditMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}, Converter={StaticResource BooleanToVisibleConverter}}" />

                            <Line
                                Grid.Row="1"
                                Grid.ColumnSpan="1"
                                VerticalAlignment="Bottom"
                                Stroke="{Binding HighlightBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}}"
                                StrokeThickness="2"
                                Visibility="{Binding ShowHighlights, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}, Converter={StaticResource BooleanToVisibleConverter}, ConverterParameter=H}"
                                X1="0"
                                X2="{Binding ActualWidth, ElementName=txtBox}"
                                Y1="0"
                                Y2="0" />

                            <Button
                                x:Name="btnSwitch"
                                Grid.RowSpan="2"
                                Grid.Column="1"
                                Style="{StaticResource ResourceKey=EditButton}">

                                <Button.Content>
                                    <MUI:XamlPathIcon
                                        Width="25"
                                        Height="{Binding ElementName=txtBox, Path=ActualHeight}"
                                        IconForeground="{Binding HighlightBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MUI:EditableTextBox}}}"
                                        IconSize="Small"
                                        XamlPath="{StaticResource ResourceKey=DefaultEditIcon}">
                                        <!--<UI:XamlPathIcon.Style>
                                            <Style TargetType="{x:Type UI:XamlPathIcon}">
                                                <Setter Property="Padding" Value="0" />
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="IconForeground" Value="Green" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </UI:XamlPathIcon.Style>-->
                                    </MUI:XamlPathIcon>
                                </Button.Content>
                            </Button>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>