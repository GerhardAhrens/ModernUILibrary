<UserControl
    x:Class="ModernUIDemo.MyControls.NumericUpDownControlsUC"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ModernUI="clr-namespace:ModernIU.Controls;assembly=ModernUILibrary"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="450"
    d:DesignWidth="800"
    mc:Ignorable="d">

    <UserControl.Resources>

        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3" />
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA" />
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5" />

        <SolidColorBrush x:Key="UpDownButton.Static.Background">#37BC9B</SolidColorBrush>
        <SolidColorBrush x:Key="UpDownButton.Static.Foreground">#FFFFFF</SolidColorBrush>

        <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="20" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>

        <Style x:Key="DecreaseButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#EEEEEE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0,0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <TextBlock Style="{StaticResource TextBoxBaseStyle}" Text="-" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#DDDDDD" />
                                <Setter TargetName="Bd" Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="#C2C3C9" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="AddButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="Background" Value="#EEEEEE" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="UseLayoutRounding" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            x:Name="Bd"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                            <TextBlock
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Style="{StaticResource TextBoxBaseStyle}"
                                Text="+" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="#DDDDDD" />
                                <Setter TargetName="Bd" Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Bd" Property="Background" Value="#C2C3C9" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="HorizontalUpDown" TargetType="{x:Type ModernUI:IntegerUpDown}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Popup
                    AllowsTransparency="True"
                    IsOpen="{Binding IsShowTip, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                    Placement="Top"
                    PlacementTarget="{Binding ElementName=border}"
                    StaysOpen="False">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="auto" />
                            <RowDefinition Height="5" />
                        </Grid.RowDefinitions>
                        <Border
                            Padding="5"
                            Background="{Binding TipBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                            CornerRadius="2"
                            SnapsToDevicePixels="True"
                            UseLayoutRounding="True">
                            <TextBlock Foreground="White" Text="{Binding TipText, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Border>

                        <Path
                            Grid.Row="1"
                            Margin="10,0,0,0"
                            HorizontalAlignment="Left"
                            Data="M0,0 5,5 10,0Z"
                            Fill="{Binding TipBackground, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                    </Grid>
                </Popup>

                <Button
                    x:Name="PART_DOWN"
                    Grid.Column="0"
                    Width="25"
                    Height="25"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="#3186FD"
                    Foreground="White"
                    Style="{StaticResource DecreaseButtonStyle}" />

                <Border
                    x:Name="border"
                    Grid.Column="1"
                    Margin="5,0"
                    Padding="0,0,0,0"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="3"
                    SnapsToDevicePixels="True"
                    UseLayoutRounding="True">
                    <ScrollViewer
                        x:Name="PART_ContentHost"
                        Grid.Column="1"
                        Focusable="false"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden" />
                </Border>

                <Button
                    x:Name="PART_UP"
                    Grid.Column="2"
                    Width="25"
                    Height="25"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="#3186FD"
                    FontSize="32"
                    Foreground="White"
                    Style="{StaticResource AddButtonStyle}" />
            </Grid>

            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter TargetName="border" Property="Opacity" Value="0.56" />
                </Trigger>
                <Trigger Property="IsReadOnly" Value="True">
                    <Setter Property="Cursor" Value="Arrow" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.MouseOver.Border}" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused" Value="true">
                    <Setter TargetName="border" Property="BorderBrush" Value="{StaticResource TextBox.Focus.Border}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="IntegerUpDownStyle1" TargetType="{x:Type ModernUI:IntegerUpDown}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Text" Value="{Binding Value, RelativeSource={RelativeSource Mode=Self}}" />
            <Setter Property="Height" Value="25" />
            <Style.Triggers>
                <Trigger Property="UpDownOrientation" Value="Horizontal">
                    <Setter Property="Template" Value="{StaticResource HorizontalUpDown}" />
                    <Setter Property="HorizontalContentAlignment" Value="Center" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="40" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TextBlock
            Grid.ColumnSpan="2"
            FontSize="14"
            Text="Beispiel für verschiedene NumericUpDown Varianten (Styles)" />

        <Separator
            Grid.ColumnSpan="2"
            Height="3"
            Background="Green" />

        <StackPanel Grid.Row="2" Orientation="Vertical">
            <StackPanel
                Grid.ColumnSpan="2"
                Margin="0,0,0,15"
                Orientation="Horizontal">

                <Label Width="20" />

                <ModernUI:IntegerUpDown
                    Width="100"
                    Height="30"
                    Margin="0,0"
                    Increment="2"
                    Maximum="50"
                    Minimum="10"
                    UpDownOrientation="Vertical"
                    Value="11" />

                <Label Width="20" />

                <ModernUI:IntegerUpDown
                    Width="100"
                    Height="30"
                    Margin="10,0"
                    Maximum="100"
                    Minimum="0"
                    UpDownOrientation="Horizontal"
                    Value="{Binding Path=Text, ElementName=txtInputInt, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />

                <ModernUI:TextBoxInt
                    x:Name="txtInputInt"
                    Width="100"
                    Text="1" />
            </StackPanel>

            <ModernUI:HeaderSeparator
                Height="15"
                Background="Green"
                Header="IntegerUpDown mit eigenem Style" />

            <StackPanel Margin="0,5" Orientation="Horizontal">

                <Label Width="20" />

                <ModernUI:IntegerUpDown
                    Width="100"
                    Height="25"
                    Margin="0,0"
                    Increment="3"
                    IsReadOnly="False"
                    Maximum="20"
                    Minimum="0"
                    Style="{DynamicResource IntegerUpDownStyle1}"
                    UpDownOrientation="Horizontal"
                    Value="20" />
            </StackPanel>

            <ModernUI:HeaderSeparator
                Height="15"
                Background="Green"
                Header="IntegerUpDown mit einer Liste als Source" />

            <StackPanel Margin="0,5" Orientation="Horizontal">
                <ModernUI:ListIntegerUpDown
                    x:Name="listIntUpDown"
                    Width="140"
                    ItemsSource="{Binding Path=ListUpDownIntSource.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    WidthContent="120"
                    Value="2024" />

                <TextBlock
                    Width="200"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    Background="White">
                    <Run FontWeight="Medium" Text="Auswahl:" />
                    <Run Text="{Binding Path=Value, ElementName=listIntUpDown}" />
                </TextBlock>
            </StackPanel>

            <ModernUI:HeaderSeparator
                Height="15"
                Background="Green"
                Header="IntegerUpDown mit einer Liste als Source" />

            <StackPanel Margin="0,5" Orientation="Horizontal">
                <ModernUI:ListStringUpDown
                    x:Name="listStringUpDown"
                    Width="140"
                    ItemsSource="{Binding Path=ListUpDownStringSource.Value, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                    WidthContent="120" />

                <TextBlock
                    Width="200"
                    Margin="5,0"
                    VerticalAlignment="Center"
                    Background="White">
                    <Run FontWeight="Medium" Text="Auswahl:" />
                    <Run Text="{Binding Path=Value, ElementName=listStringUpDown}" />
                </TextBlock>
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
