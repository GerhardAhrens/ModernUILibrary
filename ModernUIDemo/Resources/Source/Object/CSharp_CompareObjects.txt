namespace Console.CompareObjectDemo
{
    using System;
    using System.CodeDom;
    using System.Diagnostics;
    using System.Reflection;
    using System.Windows;

    using EasyPrototypingNET.Core.Comparer;

    public class Program
    {
        private static void Main(string[] args)
        {
            do
            {
                Console.Clear();
                Console.WriteLine("1. Compare two Objects");
                Console.WriteLine("2. Object Properties Equal");
                Console.WriteLine("X. Beenden");

                Console.WriteLine("Wählen Sie einen Menüpunkt oder 'x' für beenden");
                ConsoleKey key = Console.ReadKey(true).Key;
                if (key == ConsoleKey.X)
                {
                    Environment.Exit(0);
                }
                else
                {
                    if (key == ConsoleKey.D1)
                    {
                        MenuPoint1();
                    }
                    else if (key == ConsoleKey.D2)
                    {
                        MenuPoint2();
                    }
                }
            }
            while (true);
        }

        private static void MenuPoint1()
        {
            Console.Clear();

            Person p1 = CreateDateP1();
            Person p2 = CreateDateP2();

            var changes = CompareObject.GetDifferences(p1, p2);
            foreach (CompareResult item in changes)
            {
                if (item.SecondValue.GetType().Name == "List`1")
                {
                    foreach (Department itemList in (List<Department>)item.SecondValue)
                    {
                        Console.WriteLine($"=> {itemList.ToString()}");
                    }
                }
                else
                {
                    Console.WriteLine(item.ToString());
                }
            }

            ConsoleHelper.Wait();
        }

        private static void MenuPoint2()
        {
            Console.Clear();
            Person p1 = CreateDateP1();
            Person p2 = CreateDateP2();

            bool isEqual = p1.ObjectPropertiesEqual(p2);

            MessageBox.Show($"ObjectPropertiesEqual={isEqual}", "Result");

            ConsoleHelper.Wait();
        }

        private static Person CreateDateP1()
        {
            Person p1 = new Person();
            p1.PersonId = 12;
            p1.Name = "Gerhard";
            p1.Age = 58;
            p1.MeetingDate = null;

            return p1;
        }

        private static Person CreateDateP2()
        {
            Person p2 = new Person();
            p2.PersonId = 1;
            p2.Name = "Gerhard";
            p2.Age = 58;
            p2.MeetingDate = new DateTime(2019, 1, 18);

            Department dept = new Department();
            dept.DepartmentId = 1;
            dept.DepartmentName = "PTA";
            List<Department> deptList = new List<Department>();
            deptList.Add(dept);

            p2.Department = deptList;

            return p2;
        }


        [DebuggerDisplay("Id={this.PersonId};Name={this.Name}")]
        private class Person
        {
            public int PersonId { get; set; }

            public string Name { get; set; }

            public int Age { get; set; }

            public DateTime? MeetingDate { get; set; }

            public List<Department> Department { get; set; }
        }

        [DebuggerDisplay("Id={this.DepartmentId};DepartmentName={this.DepartmentName}")]
        private class Department
        {
            public int DepartmentId { get; set; }

            public string DepartmentName { get; set; }

            public override string ToString()
            {
                return $"Id={this.DepartmentId};DepartmentName={this.DepartmentName}";
            }
        }
    }
}